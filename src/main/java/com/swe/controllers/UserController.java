package com.swe.controllers;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.swe.entities.Administrator;
import com.swe.entities.NormalUser;
import com.swe.entities.StoreOwner;
import com.swe.entities.User;
import com.swe.repositories.AdminRepository;
import com.swe.repositories.NormalUserRepository;
import com.swe.repositories.StoreOwnerRepository;
import com.swe.repositories.UserRepository;

@Controller
@SessionAttributes("GlobalID")
public class UserController {
	
	@Autowired		// This means to get the bean called UserRepository, which is auto-generated by Spring, we will use it to handle the data (CRUD operations)
	private UserRepository userRepo; // I'm not using it here until now
	
	@Autowired		// This means to get the bean called AdminRepository
	private AdminRepository adminRepo;
	
	@Autowired		// This means to get the bean called AdminRepository
	private StoreOwnerRepository storeOwnerRepo;
	
	@Autowired		// This means to get the bean called AdminRepository
	private NormalUserRepository normalUserRepo;
	
	@GetMapping("/welcome")
	public String getFirstPage(Model model) {
		return "welcome";
	}
	
	@GetMapping("/register")
	public String getRegistirationForm(Model model) {
		model.addAttribute("user", new User());
		return "register";          					// return esm el-view elly 3ayz yt3mllo rendering
    }
	
    @PostMapping("/register") // Controller method to handle the POST action
    public String addUser(Model model, @ModelAttribute User user) {
    	
    	System.out.println(user.getFirstName());
    	System.out.println(user.getId());
    	System.out.println(user.getUsableID());
    	System.out.println(user.getType());
//    	String userType = user.getType();
    	
    	int id = user.getId();
    	int urlID = user.getId();
    	String firstName = user.getFirstName();
    	String lastName = user.getLastName();
    	String email = user.getEmail();
    	String password = user.getPassword();
    	String address = user.getAddress();
		String phoneNumber = user.getPhoneNumber();
		String type = user.getType(); 
		int age = user.getAge();
    	
		//int urlID = id;
		String userID = String.valueOf(urlID);
		System.out.println("userID = " + userID);
    	//userRepo.save(user);    // keda 7allet moshklt enno bydeef 2 duplicate records le kol user bygeely fe table User
    	
    	model.addAttribute("user", new User());
    	
    	String redirectPage = "redirect:/nHome";    // Default is Normal User (exceptions will be handled soon isa)
    	
    	if (type.equals("admin")) {    // Alhamdulillah <3 <3 <3 <3 <3 <3 <3 <3 <# <3 <3 <3
    		Administrator admin = new Administrator(id, firstName, lastName, email, password, address, phoneNumber, type, age);
//    		int urlID = id;
    		adminRepo.save(admin);    // save returns the identifier, not the entity.
//    		redirectPage = "redirect:/aHome"+"?id="+userID; // 5ally shakl el-url .../aHome ... wna 3aml ta7t function awl mbtshof el-shakl da btfta7 aHome.html 3la tol ;)
    		redirectPage = "redirect:/aHome"; // 5ally shakl el-url .../aHome ... wna 3aml ta7t function awl mbtshof el-shakl da btfta7 aHome.html 3la tol ;)

    	}
		else if (type.equals("owner")) {
			StoreOwner owner = new StoreOwner(id, firstName, lastName, email, password, address, phoneNumber, type, age);
			storeOwnerRepo.save(owner);
			redirectPage = "redirect:/oHome";
    	}
    	else if (type.equals("normal")) {
    		NormalUser normal = new NormalUser(id, firstName, lastName, email, password, address, phoneNumber, type, age);
    		normalUserRepo.save(normal);
    		redirectPage = "redirect:/nHome";
    	}
    	
    	return redirectPage;         // da el-view elly hyzhar b3d ml-user ydos register (bs el-url msh hyt3'ayar w hyb2a "/welcome" aked y3ny :D
        // b3ml redirect 3la tol mn 3'er m-handlha fe html page
    }
	
    // Utility Function
	public User getUser(String userMail, String userPassword) {
		
		//User user = this.findOne(userID);
		User user = userRepo.findByEmail(userMail);
		if (user != null && user.getPassword().equals(userPassword)) {
			return user;
		}
		return null;

	}

	@GetMapping("/login")
	public String getLoginForm(Model model) {
		//model.addAttribute("user", new User());   // It's USELESS ;)
		return "login";          					// return esm el-view elly 3ayz yt3mllo rendering (y3ny b2ollo eft7 page login.html)
    }
	
	// ana msh m7tag ab3t User kamel ana 3aiz el-mail w el-pass bs
	@PostMapping("/login")
//    public String verifyLogin(Model model, @RequestParam String userMail, @RequestParam String userPassword, HttpSession session) {
    public String verifyLogin(Model model, @RequestParam String userMail, @RequestParam String userPassword) {
    	
		User user = getUser(userMail, userPassword);
		if (user == null) {
			return "login";
		}
		
		// What I call using @RequestParam should have a name in the form the same as here (example userMail here and there in login.html)
		
		//session.setAttribute("LoggedInUser", user);
		model.addAttribute("GlobalID", user.getId());
		
    	String redirectPage = "redirect:/nHome";
    	
    	//TODO: bgrb bs ?id=
    	if (user.getType().equals("admin"))     
    		redirectPage = "redirect:/aHome?id="+user.getId(); // Yeeeeeeeeeeeeeeeeeeeeeeees Alhamdulillah...<3
    	else if (user.getType().equals("owner"))
    		redirectPage = "redirect:/oHome";
    	else if (user.getType().equals("normal"))
    		redirectPage = "redirect:/nHome";
    	
    	return redirectPage;
    }
	
	// law mst5dm @SessionAttributs fo2 abl el-class
	@GetMapping("/logout")
	public String logout(SessionStatus status) {
		status.setComplete();
		return "redirect:/login";
	}

	// fkrt enny ast5dm RedirectAttributs (DID NOT WORK) ---------------------------------------
//	// ana msh m7tag ab3t User kamel ana 3aiz el-mail w el-pass bs
//		@PostMapping("/login")
////	    public String verifyLogin(Model model, @RequestParam String userMail, @RequestParam String userPassword, HttpSession session) {
//	    public String verifyLogin(Model model, @RequestParam String userMail, @RequestParam String userPassword, RedirectAttributes redirectAttr) {
//	    	
//			User user = getUser(userMail, userPassword);
//			if (user == null) {
//				return "login";
//			}
//			
//			// What I call using @RequestParam should have a name in the form the same as here (example userMail here and there in login.html)
//			
//			//session.setAttribute("LoggedInUser", user);
//			////model.addAttribute("GlobalID", user.getId());
//			redirectAttr.addFlashAttribute("GlobalID", user.getId());
//			
//	    	String redirectPage = "redirect:/nHome";
//	    	
//	    	//TODO: bgrb bs ?id=
//	    	if (user.getType().equals("admin"))     
//	    		redirectPage = "redirect:/aHome?id="+user.getId(); // Yeeeeeeeeeeeeeeeeeeeeeeees Alhamdulillah...<3
//	    	else if (user.getType().equals("owner"))
//	    		redirectPage = "redirect:/oHome";
//	    	else if (user.getType().equals("normal"))
//	    		redirectPage = "redirect:/nHome";
//	    	
//	    	return redirectPage;
//	    }
	
//	// Law mst5dm HttpSession
//	@GetMapping("/logout")
//	public String logout(HttpSession session) {
//		session.removeAttribute("loggedInUser");
//		return "redirect:/login";
//	}
	
//	@PostMapping("/login")
//    public String verifyLogin(Model model, @ModelAttribute User user) { // ana msh m7tag ab3t User kamel ana 3aiz el-mail w el-pass bs
//    	
//    	System.out.println(user.getFirstName());
//    	System.out.println(user.getEmail());
//    	System.out.println(user.getPassword());
//    	System.out.println(user.getType());
//    	String userType = user.getType();
//    	
//    	model.addAttribute("user", new User());
//    	
//    	String redirectPage = "redirect:/nHome";
//    	
//    	if (userType.equals("admin"))      // Alhamdulillah <3 <3 <3 <3 <3 <3 <3 <3 <# <3 <3 <3
//    		redirectPage = "redirect:/aHome"; // 5ally shakl el-url .../aHome ... wna 3aml ta7t function awl mbtshof el-shakl da btfta7 aHome.html 3la tol ;)
//    	else if (userType.equals("owner"))
//    		redirectPage = "redirect:/oHome";
//    	else if (userType.equals("normal"))
//    		redirectPage = "redirect:/nHome";
//    	
//    	return redirectPage;
//    	
//    }
	
	@GetMapping("/nHome")
	public String getNormalUserHome(Model model) {
//		model.addAttribute("student", new Student());
		return "nHome";          					
    }
	
	@GetMapping("/oHome")
	public String getStoreOwnerHome(Model model) {
//		model.addAttribute("student", new Student());
		return "oHome";          					
    }
	
	@GetMapping("/aHome")
	public String getAdminHome(Model model) {
//		model.addAttribute("student", new Student());
		return "aHome";          					
    }
	
}
